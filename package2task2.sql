SET SERVEROUTPUT ON;

CREATE OR REPLACE PACKAGE TASK2 AS

/*

-------order by queries and nulls last:
SELECT *
FROM ORDERS
ORDER BY STATUS DESC, ORDER_ID ASC
NULLS LAST;


SELECT *
FROM CUSTOMERS
ORDER BY BIRTHDATE DESC;


SELECT PRODUCT_ID, NAME, PRICE, (SELECT AVG(PRICE) FROM PRODUCTS) AS AVG_PRICE
FROM PRODUCTS
WHERE PRICE = 30;

-- calculates avg total in comparison and excludes not complete orders
SELECT ORDER_ID, TOTAL, (SELECT AVG(TOTAL) FROM ORDERS) AS AVERAGE_TOTAL
FROM ORDERS
WHERE PAID !=0;


--- group by function
SELECT PAID, AVG(TOTAL) AS AVERAGE_TOTAL
FROM ORDERS
WHERE PAID != 0
GROUP BY PAID;


--- WHERE
SELECT *
FROM SUPPLIERS
WHERE COUNTRY = 'Japan';


--- IN
SELECT *
FROM PRODUCTS
WHERE SUPPLIER_ID IN (2,3);


--- BETWEEN AND
SELECT *
FROM PRODUCTS
WHERE PRICE BETWEEN 30 AND 50;

-- over as
SELECT ORDER_ID, AVG(QUANTITY) OVER () AS AVERAGE, QUANTITY
FROM ORDERS;

-- having
SELECT ORDER_ID, AVG(TOTAL) AS AVERAGE_TOTAL
FROM ORDERS
GROUP BY ORDER_ID
HAVING AVG(TOTAL) > 200;

--COUNT
SELECT COUNT(*)
FROM SUPPLIERS;


--INNER JOIN
SELECT *
FROM ORDERS
INNER JOIN PRODUCTS ON ORDERS.PRODUCT_ID = PRODUCTS.PRODUCT_ID;

--LEFT JOIN
SELECT *
FROM ORDERS
LEFT JOIN SHIPMENTS ON ORDERS.ORDER_ID = SHIPMENTS.ORDER_ID;

--RIGHT JOIN
SELECT CUSTOMERS.CUSTOMER_ID, FIRST_NAME, SURNAME, EMAIL, 
    ORDERS.ORDER_ID, ORDERS.TOTAL, ORDERS.STATUS
FROM ORDERS
RIGHT JOIN CUSTOMERS ON CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID;

*/


END TASK2;